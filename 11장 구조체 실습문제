1.
#pragma warning (disable: 4996)  
#include<stdio.h>  
#include<string.h> 
#include<stdlib.h>
struct V {
	int x;
	int y;
	int z;
};
int main() {
	struct V v1 = { 0 }, v2 = { 0 }, v3 = { 0 };
	scanf("%d%d%d", &v1.x, &v1.y, &v1.z);
	scanf("%d%d%d", &v2.x, &v2.y, &v2.z);
	v3.x = v1.x*v2.x;
	v3.y = v1.y*v2.y;
	v3.z = v1.z*v2.z;
	printf("%d %d %d\n", v3.x, v3.y, v3.z);
	printf("%d", v3.x + v3.y + v3.z);

	return 0;
}

2.
#pragma warning (disable: 4996)  
#include<stdio.h>  
#include<string.h> 
#include<stdlib.h>
struct T {
	int h;
	int m;
	int s;
};
int main() {
	struct T t1 = { 0 }, t2 = { 0 }, t3 = { 0 };
	int time1 = 0, time2 = 0, x;
	scanf("%d %d %d", &t1.h, &t1.m, &t1.s);
	scanf("%d %d %d", &t2.h, &t2.m, &t2.s);
	time1 = t1.h * 3600 + t1.m * 60 + t1.s;
	time2 = t2.h * 3600 + t2.m * 60 + t2.s;
	x = time2 - time1;
	t3.h = x / 3600;
	t3.m = x % 3600 / 60;
	t3.s = x % 60;
	printf("%d %d %d", t3.h, t3.m, t3.s);

	return 0;
}

3.
#pragma warning (disable: 4996)  
#include<stdio.h>  
#include<string.h> 
#include<stdlib.h>
struct S {
	char name[10];
	int score;
};
int main() {
	struct S s[5] = { 0 };
	int i, sum = 0;
	double avg;
	for (i = 0; i < 5; i++) {
		scanf("%s %d", s[i].name, &s[i].score);
		sum += s[i].score;
	}
	avg = sum / 5;
	for (i = 0; i < 5; i++) {
		if (s[i].score <= avg) {
			printf("%s\n", s[i].name);
		}
	}

	return 0;
}

4.
#pragma warning (disable: 4996)  
#include<stdio.h>  
#include<string.h> 
#include<stdlib.h>
struct S {
	char name[20];
	int score[3];
};
int main() {
	struct S stu[20];
	int N, i;
	double avg[20];
	scanf("%d", &N);
	for (i = 0; i < N; i++) {
		scanf("%s %d %d %d", stu[i].name, &stu[i].score[0], &stu[i].score[1], &stu[i].score[2]);
		avg[i] = (stu[i].score[0] + stu[i].score[1] + stu[i].score[2]) / 3.0;
		if (avg[i] >= 90) {
			printf("%s %.1lf A", stu[i].name, avg[i]);
		}
		else if (avg[i] >= 80) {
			printf("%s %.1lf B", stu[i].name, avg[i]);
		}
		else if (avg[i] >= 70) {
			printf("%s %.1lf C", stu[i].name, avg[i]);
		}
		else {
			printf("%s %.1lf F", stu[i].name, avg[i]);
		}
	}

	return 0;
}

5.
#pragma warning (disable: 4996)  
#include<stdio.h>  
#include<string.h> 
#include<stdlib.h>
struct student  {
	char name[8];
	int k;
	int e;
	int m;
	double avg;
	char grade;
};
int main() {
	struct student st[50], *p = st;
	int N;
	scanf("%d", &N);
	for (p = st; p < st + N; p++) {
		scanf("%s %d %d %d", p->name, &p->k, &p->e, &p->m);
		p->avg = (p->k + p->e + p->m) / 3.0;
		if (90 <= p->avg && p->avg <= 100) {
			p->grade = 'A';
		}
		else if (p->avg >= 80) {
			p->grade = 'B';
		}
		else if (p->avg >= 70) {
			p->grade = 'C';
		}
		else {
			p->grade = 'D';
		}
		printf("%s %.1lf %c\n", p->name, p->avg, p->grade);
	}

	return 0;
}

6.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct Student {
	int gender;
	int weight;
	int height;
};

int man(struct Student p);
int woman(struct Student p);

int main() {
	struct Student S[10] = { '\0', };
	int N = 0, grade[3] = { 0, }, tmp = 0;

	scanf("%d", &N);
	for (int i = 0; i < N; i++)
		scanf("%d %d %d", &S[i].gender, &S[i].weight, &S[i].height);

	for (int i = 0; i < N; i++)
	{
		if (S[i].gender == 1)
			tmp = man(S[i]) - 1;
		else if (S[i].gender == 2)
			tmp = woman(S[i]) - 1;
		grade[tmp]++;
	}
	printf("%d %d %d", grade[0], grade[1], grade[2]);

	return 0;
}

int man(struct Student p) {
	if (p.height >= 175)
	{
		if (p.weight >= 70)
			return 1;
		else if (p.weight >= 60)
			return 2;
		else
			return 3;
	}
	else if (p.height >= 165)
	{
		if (p.weight >= 70)
			return 3;
		else if (p.weight >= 60)
			return 1;
		else
			return 2;
	}
	else
	{
		if (p.weight >= 70)
			return 2;
		else if (p.weight >= 60)
			return 3;
		else
			return 1;
	}
}

int woman(struct Student p) {
	if (p.height >= 175)
	{
		if (p.weight >= 60)
			return 1;
		else if (p.weight >= 50)
			return 2;
		else
			return 3;
	}
	else if (p.height >= 165)
	{
		if (p.weight >= 60)
			return 3;
		else if (p.weight >= 50)
			return 1;
		else
			return 2;
	}
	else
	{
		if (p.weight >= 60)
			return 2;
		else if (p.weight >= 50)
			return 3;
		else
			return 1;
	}
}

7.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct a {
	int N;
	int rank;
};
int main() {
	struct a I[10] = { 0 };
	for (int i = 0; i < 10; i++) {
		scanf("%d", &I[i].N);
	}
	for (int i = 0; i < 10; i++) {
		for (int j = 0; j < 10; j++) {
			if (I[i].N <= I[j].N)
				I[i].rank++;
		}
	}
	for (int i = 0; i < 10; i++) {
		if (I[i].rank == 3) {
			printf("%d ", I[i].N);
		}
		
	}
	for (int i = 0; i < 10; i++) {
		if (I[i].rank == 7) {
			printf("%d ", I[i].N);
		}
	}
	return 0;
}

8.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct complex {
	double a;
	double b;
};
struct complex add(struct complex x, struct complex y);
int main() {
	struct complex x, y, z;
	scanf("%lf %lf", &x.a, &x.b);
	scanf("%lf %lf", &y.a, &y.b);
	z = add(x, y);
	printf("%.1lf + %.1lfi", z.a, z.b);

	return 0;
}
struct complex add(struct complex x, struct complex y) {
	struct complex z;
	z.a = x.a + y.a;
	z.b = x.b + y.b;
	return z;
}

9.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct result {
	int high;
	int low;
	char result;
	int pminus;
	int minus;
};
void passorfail(struct result *p);
int main() {
	struct result stu;
	scanf("%d %d %d", &stu.high, &stu.low, &stu.pminus);
	passorfail(&stu);
	printf("%d %c", stu.minus, stu.result);

	return 0;
}
void passorfail(struct result *p) {
	p->minus = p->high - p->low;
	if (p->minus <= p->pminus) {
		p->result = 'P';
	}
	else {
		p->result = 'F';
	}
}

10.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct date {
	int year;
	int month;
	int day;
};
struct date *select_min(struct date *p, struct date *q);
int main() {
	struct date a, b, *p = NULL;
	scanf("%d/%d/%d", &a.year, &a.month, &a.day);
	scanf("%d/%d/%d", &b.year, &b.month, &b.day);
	p = select_min(&a, &b);
	printf("%d/%d/%d", p->year, p->month, p->day);

	return 0;
}
struct date *select_min(struct date *p, struct date *q) {
	if (p->year == q->year) {
		if (p->month == q->month) {
			if (p->day >= q->day) {
				return q;
			}
			else {
				return p;
			}
		}
		else if (p->month > q->month) {
			return q;
		}
		else {
			return p;
		}
	}
	else if (p->year > q->year) {
		return q;
	}
	else {
		return p;
	}
}

11.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct student {
	char name[10];
	int score;
};
struct student *select_min(struct student p[]);
int main() {
	struct student s[5], *p;
	for (int i = 0; i < 5; i++) {
		scanf("%s %d", s[i].name, &s[i].score);
	}
	p = select_min(s);
	printf("%s %d", p->name, p->score);

	return 0;
}
struct student *select_min(struct student p[]) {
	struct student *q = p;
	for (int i = 0; i < 5; i++) {
		if (q->score > p[i].score) {
			q = &p[i];
		}
	}
	return q;
}

12.
#pragma warning (disable:4996) 
#include <stdio.h> 
#include <string.h> 
struct student {
	char name[10];
	int score[3];
	double avg;
};
void read_data(struct student p[]);
void cal_avg(struct student p[]);
void sort(struct student p[]);
void print_score(struct student p[]);
int main() {
	struct student s[10];
	read_data(s);
	cal_avg(s);
	sort(s);
	print_score(s);

	return 0;
}
void read_data(struct student p[]) {
	for (int i = 0; i < 10; i++) {
		scanf("%s %d %d %d", p[i].name, &p[i].score[0], &p[i].score[1], &p[i].score[2]);
	}
}
void cal_avg(struct student p[]) {
	for (int i = 0; i < 10; i++) {
		p[i].avg = (p[i].score[0] + p[i].score[1] + p[i].score[2]) / 3.0;
	}
}
void sort(struct student p[]) {
	struct student tmp;
	for (int i = 0; i < 9; i++) {
		for (int j = i + 1; j < 10; j++) {
			if (p[i].avg < p[j].avg) {
				tmp = p[i];
				p[i] = p[j];
				p[j] = tmp;
			}
		}
	}
}
void print_score(struct student p[]) {
	printf("%s %.2lf\n", p[0].name, p[0].avg);
	printf("%s %.2lf\n", p[9].name, p[9].avg);
	printf("%s %.2lf\n", p[7].name, p[7].avg);
	printf("%s %.2lf\n", p[8].name, p[8].avg);
	printf("%s %.2lf\n", p[9].name, p[9].avg);
}
